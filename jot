#!/bin/bash


# Notes are stored in $JOTPATH, organized by topic.
# Each topic is represented by a regular file containing all notes on that topic.
# (i.e. each note is a line in $JOTPATH/TOPIC)

function handle_list_tag {
	# $1=number args to Jot; $2=arguments to Jot
	num_topics=$1
	topics=$2

	# If this tag was passed an argument, then...
	if [ $num_topics -gt 0 ]; then

		# For each topic queried, cat the notes in that topic
		for topic in $topics; do
			
			# Print header if more than one topic to list
			if [ $num_topics -gt 1 ]; then
				echo "Notes for $topic: "
			fi

			# List all notes under the given topic
			cat $JOTPATH/$topic

			# If the given topic has not been created, then print an error
			if [ $? -ne 0 ]; then
				echo "-Jot: '$topic' is not a valid topic" 2>&1
			fi

			# Add newline for spacing if more than one topic
			if [ $num_topics -gt 1 ]; then
				echo ""
			fi

			# Shift $@ and $# outside function to ensure consistency when this function returns
			shift
		done

	else
		# No argument, so list all topics
		ls $JOTPATH | sed "s/ /\n/g"
	fi
}

# No args case
if [ $# -eq 0 ]; then
	echo "-Jot: no-arg functionality not yet implemented" 2>&1
	exit 0
fi


# Var args case
note_content=""

while [ $# -gt 0 ]; do
	case $1 in
	-l)
		shift # shift out -l option itself
		num_topics=$#
		let num_topics=${#note_content[@]}+${num_topics}-1 # account for pre-option topic args
		topics=$@$note_content
		handle_list_tag $num_topics "$topics"
		exit 0;;
	-*)
		echo "-Jot: flag arguments not fully implemented" 2>&1
		exit 1;;
	*)
		note_content="${note_content} $1"
		shift;;
	esac
done

if [ -n "$note_content" ]; then
	topic=$(date +%F) # use current date as default folder name
	topic_path=$JOTPATH/$topic
	touch $topic_path # ensure topic file exists
	echo $note_content >> $topic_path # append note_content to topic file
fi

exit 0
